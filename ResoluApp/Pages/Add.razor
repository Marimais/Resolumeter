@inject AuthenticationStateProvider AuthenticationState

<div>

    <div class="add-container">

        <div class="card">
            
            <button id="Addbtn" class="btn-circle"><span class="oi oi-plus"> </span> </button>
            <a href="#" class="btn-circle-child">Dream</a>
            <a href="Goal" class="btn-circle-child">Goal</a>
            <a href="Task" class="btn-circle-child">Task</a>
        </div>
    </div>


</div>

@* <ul>
    @foreach (var task in _tasks)
    {
            <li>
                <input @bind="task.Status" class="option-input" />
                <input @bind="task.Name"/>
            </li>
    }
    </ul>*@

@code{
    [Parameter]
    public string Username { get; set; }

    protected async override System.Threading.Tasks.Task OnInitializedAsync()
        {
            var authenticationState = await AuthenticationState.GetAuthenticationStateAsync();
            var user = authenticationState.User;
            Username = user!.Identity!.Name!;
        }
    }