@inject AuthenticationStateProvider AuthenticationState
@inject IGoalService GoalService
@inject IResolutionService ResolutionService

<select @bind="GoalId">
    <option value="0">Goal</option>
    @foreach (var goal in _goals)
    {
        <option value="@goal.Id">@goal.Name</option>
    }
</select>

@code {
    private int _goalId;
    private int _year;
    private string? _userName;
    private List<Goal> _goals = new();

    [Parameter]
    public int Year
    {
        get => _year;
        set
        {
            if (_year == value) return;
            _year = value;
            if (_userName is not null)
                GetGoals();
        }
    }

    [Parameter]
    public EventCallback<int> GoalIdChanged { get; set; }

    [Parameter]
    public int GoalId
    {
        get => _goalId;
        set
        {
            if (_goalId == value) return;
            _goalId = value;
            GoalIdChanged.InvokeAsync(value);
        }
    }

    protected override async System.Threading.Tasks.Task OnInitializedAsync()
    {
        Identify identify = new(AuthenticationState);
        _userName = await identify.GetUserName();
        if (_userName is not null)
        {
            GetGoals();
        }
    }

    private void GetGoals()
    {
        _goals.Clear();
        Resolution resolution = ResolutionService.Get(_userName!, Year);
        if (resolution != null)
        {
            _goals.AddRange(GoalService.GetAll(resolution.Id)!);
        }
    }
}
