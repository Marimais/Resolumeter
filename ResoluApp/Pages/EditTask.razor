@page "/Edittask/{TaskId}"
@attribute [Authorize]
@inject ITaskService TaskService;

<form class="input-box">
    <input placeholder="@_name" @bind="_name"/>
    <input placeholder="@_description" @bind="_description"/>
    <StatusSelector @bind-Status="_status"/>
    <input placeholder="@_startDate" @bind="_startDate" type="date" />
    <input placeholder="@_endDate" @bind="_endDate" type="date" />
    <button class="btn-sign" @onclick="UpdateTaskOnClick">Save</button>    
</form>
<a href="EditGoal/@_goalID">
    <button class="btn-delete" @onclick="DeleteTaskOnCLick">
        <i class="oi oi-trash" />
    </button>
</a>

@code {
    private int _taskId;
    private string _name;
    private string? _description;
    private Status _status;
    private DateTime _startDate;
    private DateTime _endDate;
    private int _goalID;

    [Parameter]
    public string TaskId { get; set; }

    protected override void OnInitialized()
    {
        _taskId = Convert.ToInt32(TaskId);
        GetTask();
    }

    private void GetTask()
    {
        var task = TaskService.Get(_taskId);
        if(task is not null)
        {
            _name = task.Name;
            _description = task.Description;
            _status = task.Status;
            _startDate = task.StartDate;
            _endDate = task.EndDate;
            _goalID = task.Goal.Id;
        }        
    }

    private void UpdateTaskOnClick()
    {
        TaskService.Edit(_taskId, _name, _status, _description, _startDate, _endDate);
    }

    private void DeleteTaskOnCLick()
    {
        TaskService.Delete(_taskId);
    }
}
